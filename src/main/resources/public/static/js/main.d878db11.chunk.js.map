{"version":3,"sources":["store/actions/action.js","components/ErrorHandler/withErrorHandler.js","components/NavBar/NavBar.js","components/Layout/Layout.js","pages/Login/Login.js","components/RecipeCard/RecipeCard.js","components/Title/Title.js","pages/Recipes/Recipes.js","pages/RecipeForm/RecipeForm.js","pages/About/About.js","pages/SignUp/SignUp.js","App.js","reportWebVitals.js","store/reducers/isLoggedIn.js","store/reducers/userDataReducer.js","index.js","components/RecipeCard/RecipeCard.module.css","components/Title/Title.module.css","pages/RecipeForm/RecipeForm.module.css","pages/About/About.module.css","components/Layout/Layout.module.css","pages/Login/Login.module.css","pages/Recipes/Recipes.module.css","pages/SignUp/SignUp.module.css"],"names":["userlogin","loggedIn","type","getUserData","userdata","authCheckLoggedIn","dispatch","a","axios","method","url","responseType","withCredentials","then","res","undefined","data","authenticated","console","log","catch","err","error","loggedInCheck","withErrorHandler","WrappedComponent","props","reqInterceptors","interceptors","request","use","req","resInterceptors","response","status","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","eject","this","Component","isLoggedIn","useSelector","state","useDispatch","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","to","Toggle","Collapse","id","Nav","className","onClick","e","window","location","reload","logoutUser","Layout","classes","Content","children","newestOnTop","rtl","pauseOnFocusLoss","useState","username","password","formData","setFormData","handleInputChange","event","target","value","checked","name","prevState","LoginSection","htmlFor","onChange","placeholder","required","autoFocus","preventDefault","bodyFormData","FormData","append","headers","success","login","loginUser","links","authorities","some","x","authority","approved","approvelink","recipeId","approveRecipe","disapprovelink","disapproveRecipe","RecipeCard","Card","style","width","Body","Title","recipeName","Subtitle","recipeCategory","ingredients","map","ingredient","indx","ingredientName","Text","recipeProcedure","divider","donotcross","join","recipes","setRecipes","useEffect","fetchRecipes","allRecipes","length","recipe","idx","RecipesSection","ingredientInputValue","setIngredientInputValue","setBodyFormData","inputRef","useRef","history","useHistory","renderTooltip","Tooltip","RecipeForm","Form","Group","Label","InputGroup","FormControl","Select","Row","Col","lg","ref","handleIngredientInputChange","sm","Button","prevIngredients","ing","shift","current","focus","addIngredient","tags","tag","allIng","toRemove","indexOf","splice","deleteTag","OverlayTrigger","placement","delay","show","hide","overlay","FloatingLabel","controlId","label","Control","as","height","push","submitRecipe","About","AboutSection","AboutDiv","email","SignupSection","signup","signupUser","App","routes","path","exact","component","Recipes","Login","SignUp","render","pathname","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","isLoggedInReducer","userDataReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"0PAEaA,EAAY,SAACC,GACtB,MAAO,CACHC,KAAM,SACND,SAAUA,IAKLE,EAAc,SAACC,GACxB,MAAO,CACHF,KAAM,gBACNE,SAAUA,IAILC,EAAoB,WAE7B,OAAO,SAAAC,IAGgB,uCAAE,sBAAAC,EAAA,sDACjBC,IAAM,CACFC,OAAQ,MACRC,IAJE,6BAKFC,aAAc,SACdC,iBAAiB,IAClBC,MAAK,SAACC,QAC0BC,IAA3BD,EAAIE,KAAKC,gBAA0D,IAA3BH,EAAIE,KAAKC,eACjDC,QAAQC,IAAI,SACZb,EAASH,EAAYW,EAAIE,OACzBV,EAASN,GAAU,MAEnBkB,QAAQC,IAAI,gBACZb,EAASH,EAAYW,EAAIE,OACzBV,EAASN,GAAW,KAExBkB,QAAQC,IAAIL,MACbM,OAAM,SAACC,GACNH,QAAQC,IAAI,QACZD,QAAQI,MAAMD,GACdf,EAASH,EAAY,CAACc,eAAe,KACrCX,EAASN,GAAU,OArBN,2CAAF,qDAwBnBuB,K,8CCFOC,EA1CU,SAACC,EAAkBjB,GAExC,yDAGI,WAAYkB,GAAQ,IAAD,8BACf,cAAMA,IAEDC,gBAAkBnB,EAAMoB,aAAaC,QAAQC,KAAI,SAAAC,GAClD,OAAOA,KAGX,EAAKC,gBAAkBxB,EAAMoB,aAAaK,SAASH,KAAI,SAAAG,GACnD,OAAOA,KACR,SAAAX,GAYC,OAX0B,MAAxBA,EAAMW,SAASC,QACbC,IAAMb,MAAM,mBAAoB,CAC5Bc,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU3B,IAGX,WArBI,EAHvB,wDA4BI,WAEIP,EAAMoB,aAAaC,QAAQc,MAAMC,KAAKjB,iBACtCnB,EAAMoB,aAAaC,QAAQc,MAAMC,KAAKZ,mBA/B9C,oBAiCI,WACI,OACI,cAACP,EAAD,eAAsBmB,KAAKlB,YAnCvC,GAAqBmB,cCoEVrB,KAhEA,WAEX,IAAMsB,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cAExCxC,EAAW2C,cAsBjB,OACI,kCACI,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,SACI,eAACC,EAAA,EAAD,WACI,cAACL,EAAA,EAAOM,MAAR,CAAcC,GAAG,QAAjB,sBACA,cAACP,EAAA,EAAOQ,OAAR,CAAe,gBAAc,0BAC7B,eAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,wBAApB,UACI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAAC,IAAD,CAAMA,UAAU,WAAWL,GAAG,IAA9B,kBACA,cAAC,IAAD,CAAMK,UAAU,WAAWL,GAAG,OAA9B,6BACA,cAAC,IAAD,CAAMK,UAAU,WAAWL,GAAG,SAA9B,sBASJ,cAACI,EAAA,EAAD,UAEKf,EACK,cAAC,IAAD,CAAMgB,UAAU,WAAWL,GAAG,IAAIM,QAAS,SAACC,IAxCrD,uCAAG,sBAAAzD,EAAA,sDAChBC,IAAM,CACFC,OAAQ,MACRC,IAJE,+BAKFC,aAAc,SACdC,iBAAiB,IAChBC,MAAK,SAACC,GACLR,EAASD,KACT4D,OAAOC,SAASC,SAChBjD,QAAQC,IAAIL,MACbM,OAAM,SAACC,GACNH,QAAQC,IAAI,QACZD,QAAQI,MAAMD,MAZJ,2CAAH,qDAejB+C,IAyB0B,oBACA,qCACE,cAAC,IAAD,CAAMN,UAAU,WAAWL,GAAG,SAA9B,mBACA,cAAC,IAAD,CAAMK,UAAU,WAAWL,GAAG,UAA9B,sCAaIjD,K,iBCpE3B6D,EAAS,SAAC3C,GAGnB,OACI,qCACI,cAAC,EAAD,IACA,uBAAMoC,UAAWQ,IAAQC,QAAzB,UACK7C,EAAM8C,SACP,cAAC,IAAD,CACIpC,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBmC,aAAa,EACblC,cAAY,EACZmC,KAAK,EACLC,kBAAgB,EAChBlC,WAAS,EACTD,cAAY,W,wCC8EjBhB,KA5FD,SAACE,GAEX,MAAgCkD,mBAAS,CACrCC,SAAU,GACVC,SAAU,KAFd,mBAAOC,EAAP,KAAiBC,EAAjB,KAKM1E,EAAW2C,cAmDXgC,EAAoB,SAACC,GACvB,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOjF,KAAsBiF,EAAOE,QAAUF,EAAOC,MAC7DE,EAAOH,EAAOG,KAEpBN,GAAY,SAAAO,GACR,OAAO,2BAAKA,GAAZ,kBAAwBD,EAAOF,QAIvC,OACI,qBAAKtB,UAAS,oBAAeQ,IAAQkB,cAArC,SACI,uBAAM1B,UAAU,cAAhB,UACI,oBAAIA,UAAU,sBAAd,sCACA,8BACI,uBAAO2B,QAAQ,WAAW3B,UAAU,UAApC,sBACA,uBAAO4B,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IAAIoB,MAAOL,EAASF,SAAU3E,KAAK,OAAO0D,GAAG,WAAW0B,KAAK,WAAWxB,UAAU,eAAe6B,YAAY,WAAWC,SAAS,GACvKC,UAAU,QAElB,8BACI,uBAAOJ,QAAQ,WAAW3B,UAAU,UAApC,sBACA,uBAAO4B,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IAAIoB,MAAOL,EAASD,SAAU5E,KAAK,WAAW0D,GAAG,WAAW0B,KAAK,WAAWxB,UAAU,eAAe6B,YAAY,WACvJC,SAAS,QAMjB,wBAAQ9B,UAAU,mCAAmCC,QAAS,SAACC,GAAD,OA7ExD,SAACA,GACfA,EAAE8B,iBACF,IAAIC,EAAe,IAAIC,SACvBD,EAAaE,OAAO,WAAYlB,EAASF,UACzCkB,EAAaE,OAAO,WAAYlB,EAASD,UAK9B,uCAAG,sBAAAvE,EAAA,sDACVW,QAAQC,IAAI,QACZX,IAAM,CACFC,OAAQ,OACRC,IANE,8BAOFM,KAAM+E,EACNG,QAAS,CAAE,eAAgB,uBAC3BtF,iBAAiB,IAEhBC,MAAK,SAAUoB,GACZf,QAAQC,IAAI,WACZD,QAAQC,IAAIc,GACK,UAAbA,GACAE,IAAMgE,QAAQ,mBAAoB,CAC9B/D,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU3B,IAGlBT,EAASD,QAEZe,OAAM,SAAUE,GACbJ,QAAQC,IAAI,SACRG,EAAMW,WACNf,QAAQC,IAAIG,EAAMW,SAASjB,MAC3BE,QAAQC,IAAIG,EAAMW,SAASC,QAC3BhB,QAAQC,IAAIG,EAAMW,SAASiE,aA9B7B,2CAAH,oDAqCXE,GA+B6EC,CAAUrC,IAA/E,0BAMuBxD,K,2CCXxBgB,KAlFI,SAACE,GAEhB,IAAI4E,EAAQ,GAqDZ,OAVI5E,EAAMoB,YAAcpB,EAAMtB,SAASa,eAC/BS,EAAMtB,SAASmG,YAAYC,MAAK,SAAAC,GAAC,MAAoB,eAAhBA,EAAEC,eAEnCJ,GADmB,IAAnB5E,EAAMiF,SACG,wBAAQ7C,UAAWQ,IAAQsC,YAAa7C,QAAS,SAACC,GAAD,OA3ChD,SAACA,EAAG6C,GACtB7C,EAAE8B,iBACF,IAAIpF,EAAG,+CAA2CmG,GAElDrG,IAAM,CACFC,OAAQ,OACRC,IAAKA,EACLE,iBAAiB,IAEhBC,MAAK,SAAUoB,GACZf,QAAQC,IAAI,WACZD,QAAQC,IAAIc,GACZgC,OAAOC,SAASC,YAEnB/C,OAAM,SAAUE,GACbJ,QAAQC,IAAI,SACZD,QAAQC,IAAIG,MA2BqDwF,CAAc9C,EAAGtC,EAAMkC,KAA/E,qBAEA,wBAAQE,UAAWQ,IAAQyC,eAAgBhD,QAAS,SAACC,GAAD,OAzBhD,SAACA,EAAG6C,GACzB7C,EAAE8B,iBACF,IAAIpF,EAAG,kDAA8CmG,GAErDrG,IAAM,CACFC,OAAQ,OACRC,IAAKA,EACLE,iBAAiB,IAEhBC,MAAK,SAAUoB,GACZf,QAAQC,IAAI,WACZD,QAAQC,IAAIc,GACZgC,OAAOC,SAASC,YAEnB/C,OAAM,SAAUE,GACbJ,QAAQC,IAAI,SACZD,QAAQC,IAAIG,MASwD0F,CAAiBhD,EAAGtC,EAAMkC,KAArF,yBAMjB,qBAAKE,UAAWQ,IAAQ2C,WAAxB,SACI,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAAtB,SACI,eAACF,EAAA,EAAKG,KAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5F,EAAM6F,aACnB,cAACL,EAAA,EAAKM,SAAN,CAAe1D,UAAU,kBAAzB,SAA4CpC,EAAM+F,iBAClD,6BACK/F,EAAMgG,YAAYC,KAAI,SAACC,EAAYC,GAChC,OACI,6BAAgBD,EAAWE,gBAAlBD,QAIrB,cAACX,EAAA,EAAKa,KAAN,UACKrG,EAAMsG,kBAGP1B,WAUoB9F,K,iBCpF/B8G,EAAQ,SAAC5F,GAClB,OACI,oBAAIoC,UAAW,CAACQ,IAAQgD,MAAOhD,IAAQ2D,QAAS3D,IAAQ4D,YAAYC,KAAK,KAAzE,SAAgFzG,EAAM4D,QC8C/E9D,KA5CC,WAEZ,MAA8BoD,mBAAS,IAAvC,mBAAOwD,EAAP,KAAgBC,EAAhB,KACMvF,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cACxC1C,EAAW2C,aAAY,SAAAC,GAAK,OAAIA,EAAM5C,YAC5CkI,qBAAU,YAEY,uCAAG,sBAAA/H,EAAA,sDACjBC,IAAM,CACFC,OAAQ,MACRC,IAJE,mCAKFE,iBAAiB,IAClBC,MAAK,SAACC,GACLI,QAAQC,IAAIL,EAAIE,MAChBqH,EAAWvH,EAAIE,SAChBI,OAAM,SAACC,GACNH,QAAQI,MAAMD,MATD,2CAAH,qDAalBkH,KAED,IAEH,IAAIC,EAAa,mCAUjB,OARuB,IAAnBJ,EAAQK,SACRD,EAAaJ,EAAQT,KAAI,SAACe,EAAQC,GAC9B,OACI,cAAC,EAAD,2BAA0BD,GAA1B,IAAkC5F,WAAYA,EAAY1C,SAAUA,IAAnDuI,OAMzB,mCACI,0BAAS7E,UAAWQ,IAAQsE,eAA5B,UACI,cAAC,EAAD,CAAOtD,KAAK,gBACXkD,SAMwBhI,K,6GCkH1BgB,MA9JI,SAACE,GAEhB,MAAwDkD,mBAAS,IAAjE,mBAAOiE,EAAP,KAA6BC,EAA7B,KAEA,EAAwClE,mBAAS,CAC7C2C,WAAY,GACZE,eAAgB,MAChBO,gBAAiB,GACjBN,YAAa,CAAC,CACVI,eAAgB,OALxB,mBAAO/B,EAAP,KAAqBgD,EAArB,KASMC,EAAWC,mBAEXC,EAAUC,cAEVC,EAAgB,SAAC1H,GAAD,OAClB,cAAC2H,EAAA,EAAD,yBAASzF,GAAG,kBAAqBlC,GAAjC,6CA6BEuD,EAAoB,SAACC,GACvBA,EAAMY,iBACN,IAAMX,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOjF,KAAsBiF,EAAOE,QAAUF,EAAOC,MAC7DE,EAAOH,EAAOG,KACpByD,GAAgB,SAAAxD,GAAS,kCAAUA,GAAV,kBAAsBD,EAAOF,QAmC1D,OAEI,qBAAKtB,UAAS,oBAAeQ,KAAQgF,YAArC,SACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAY1F,UAAU,OAAtB,UACI,cAACyF,EAAA,EAAKE,MAAN,0BACA,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAW3B,KAAZ,gBACA,cAAC4B,EAAA,EAAD,CAAarE,KAAK,aAAaI,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IAAIoB,MAAOW,EAAawB,WAAY3D,GAAG,iCAAiC+B,YAAY,6BAI9J,eAAC4D,EAAA,EAAKC,MAAN,CAAY1F,UAAU,OAAtB,UACI,cAACyF,EAAA,EAAKE,MAAN,CACI3F,UAAU,UACV2B,QAAQ,yBAFZ,6BAMA,eAAC8D,EAAA,EAAKK,OAAN,CAAatE,KAAO,iBAAiBI,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IAAIoB,MAAOW,EAAa0B,eAAgB3D,UAAU,UAAUF,GAAG,yBAAvI,UACI,wBAAQwB,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,2BAGR,eAACmE,EAAA,EAAKC,MAAN,CAAY1F,UAAU,OAAtB,UACI,eAAC+F,EAAA,EAAD,CAAK/F,UAAU,MAAf,UACI,cAACgG,EAAA,EAAD,CAAKC,IAAE,EAAP,SACI,cAACJ,EAAA,EAAD,CAAaK,IAAKhB,EAAUtD,SAAU,SAAC1B,GAAD,OAxE1B,SAACA,GACjCA,EAAE8B,iBACFgD,EAAwB9E,EAAEmB,OAAOC,OAsEgC6E,CAA4BjG,IAAIoB,MAAOyD,EAAsBjF,GAAG,kCAAkC+B,YAAY,wBAE/J,cAACmE,EAAA,EAAD,CAAKI,IAAE,EAAP,SACI,cAACC,GAAA,EAAD,CAAQ7G,QAAQ,UAAUS,QAAS,SAACC,GAAD,OA9FrC,SAACA,GACnBA,EAAE8B,iBACFiD,GAAgB,SAAAxD,GACZ,IAAM6E,EAAe,YAAO7E,EAAUmC,aACtC,OAAI0C,EAAgB5D,MAAK,SAAA6D,GAAG,OAAIA,EAAIvC,iBAAmBe,MAAkD,KAAzBA,GAC5E3H,QAAQC,IAAI,UACL,eAAKoE,KAER6E,EAAgB3B,OAAS,GAA2C,KAAtC2B,EAAgB,GAAGtC,gBACjDsC,EAAgBE,QAEb,2BAAK/E,GAAZ,IAAuBmC,YAAY,GAAD,mBAAM0C,GAAN,CAAuB,CAAEtC,eAAgBe,WAGnFC,EAAwB,IACxBE,EAASuB,QAAQC,QA+E6CC,CAAczG,IAAxD,sBAGR,qBAAKF,UAAWQ,KAAQoG,KAAxB,SACK3E,EAAa2B,YAAYC,KAAI,SAAC0C,EAAK1B,GAChC,MAA2B,KAAvB0B,EAAIvC,eAEA,sBAAMhE,UAAWQ,KAAQqG,IAAe5G,QAAS,kBA7C/D,SAACsG,EAAK1B,GACpB,IAAMiC,EAAM,YAAO7E,EAAa2B,aAC1BmD,EAAWD,EAAOE,QAAQT,GAChCO,EAAOG,OAAOF,EAAU,GACxB9B,GAAgB,SAAAxD,GAAS,kCAAUA,GAAV,IAAqBmC,YAAY,YAAKkD,QAyCoBI,CAAUX,IAAWlD,MAAO,CAAE,UAAW,WAAhG,SACI,cAAC8D,GAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,EAAGC,KAAM,GACxBC,QAASlC,EAHb,SAG4B,+BAAOiB,EAAIvC,oBAJRa,GAQhC,aAKvB,cAACY,EAAA,EAAKC,MAAN,CAAY1F,UAAU,OAAtB,SACI,cAACyH,GAAA,EAAD,CAAeC,UAAU,oBAAoBC,MAAM,YAAnD,SACI,cAAClC,EAAA,EAAKmC,QAAN,CACIC,GAAG,WACHhG,YAAY,yBACZwB,MAAO,CAAEyE,OAAQ,SACjBlG,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IACnCsB,KAAO,kBACPF,MAAOW,EAAaiC,sBAIhC,cAACmC,GAAA,EAAD,CAAQ7G,QAAQ,UAAUS,QAAS,SAACC,GAAD,OA9F1B,SAACA,GAClBA,EAAE8B,iBAGFtF,IAAM,CACFC,OAAQ,OACRC,IAJM,mCAKNM,KAAM+E,EAENnF,iBAAiB,IAEhBC,MAAK,SAAUoB,GACZf,QAAQC,IAAIc,EAASiE,SACrBhF,QAAQC,IAAI,WACZD,QAAQC,IAAIc,GACZiH,EAAQ2C,KAAK,QAEhBzK,OAAM,SAAUE,GACbJ,QAAQC,IAAI,SACZD,QAAQC,IAAIG,MA2E8BwK,CAAa9H,IAAvD,2BAS4BxD,K,oBCnK/BuL,GAAQ,WACjB,OACI,0BAASjI,UAAS,oBAAeQ,KAAQ0H,cAAzC,UACI,cAAC,EAAD,CAAO1G,KAAK,UACZ,qBAAKxB,UAAWQ,KAAQ2H,SAAxB,SACI,ytCAQJ,qBAAKnI,UAAWQ,KAAQ2H,SAAxB,SACI,6tC,oBC+FDzK,I,OAAAA,GAtGA,SAACE,GAEZ,MAAgCkD,mBAAS,CACrCC,SAAU,GACVC,SAAU,GACVoH,MAAO,KAHX,mBAAOnH,EAAP,KAAiBC,EAAjB,KAMM1E,EAAW2C,cACXiG,EAAUC,cA+CVlE,EAAoB,SAACC,GACvB,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOjF,KAAsBiF,EAAOE,QAAUF,EAAOC,MAC7DE,EAAOH,EAAOG,KAEpBN,GAAY,SAAAO,GACR,OAAO,2BAAKA,GAAZ,kBAAwBD,EAAOF,QAOvC,OACI,qBAAKtB,UAAS,oBAAeQ,KAAQ6H,eAArC,SACI,uBAAMrI,UAAU,cAAhB,UACI,oBAAIA,UAAU,sBAAd,kCACA,8BACI,uBAAO2B,QAAQ,QAAQ3B,UAAU,UAAjC,mBACA,uBAAO4B,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IAAIoB,MAAOL,EAASmH,MAAOhM,KAAK,OAAO0D,GAAG,QAAQ0B,KAAK,QAAQxB,UAAU,eAAe6B,YAAY,QAAQC,SAAS,GAC3JC,UAAU,QAElB,8BACI,uBAAOJ,QAAQ,WAAW3B,UAAU,UAApC,sBACA,uBAAO4B,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IAAIoB,MAAOL,EAASF,SAAU3E,KAAK,OAAO0D,GAAG,WAAW0B,KAAK,WAAWxB,UAAU,eAAe6B,YAAY,WAAWC,SAAS,GACvKC,UAAU,QAElB,8BACI,uBAAOJ,QAAQ,WAAW3B,UAAU,UAApC,sBACA,uBAAO4B,SAAU,SAAC1B,GAAD,OAAOiB,EAAkBjB,IAAIoB,MAAOL,EAASD,SAAU5E,KAAK,WAAW0D,GAAG,WAAW0B,KAAK,WAAWxB,UAAU,eAAe6B,YAAY,WACvJC,SAAS,QAMjB,wBAAQ9B,UAAU,mCAAmCC,QAAS,SAACC,GAAD,OAlFvD,SAACA,GAChBA,EAAE8B,iBACF,IAAIC,EAAe,IAAIC,SACvBD,EAAaE,OAAO,WAAYlB,EAASF,UACzCkB,EAAaE,OAAO,WAAYlB,EAASD,UACzCiB,EAAaE,OAAO,QAASlB,EAASmH,OAM1B,uCAAG,sBAAA3L,EAAA,sDACXW,QAAQC,IAAI,WACZX,IAAM,CACFC,OAAQ,OACRC,IANE,+BAOFM,KAAM+D,EACNnE,iBAAiB,IAEhBC,MAAK,SAAUoB,GACZf,QAAQC,IAAI,WACZD,QAAQC,IAAIc,GACZE,IAAMgE,QAAQ,yCAA0C,CACpD/D,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU3B,IAEdmI,EAAQ2C,KAAK,UACbvL,EAASD,QAEZe,OAAM,SAAUE,GACbJ,QAAQC,IAAI,SACZgB,YAAM,wBACNjB,QAAQC,IAAIG,MA1BT,2CAAH,oDAgCZ8K,GAuC6EC,CAAWrI,IAAhF,4BAUwBxD,MCrCzB8L,GA/DH,WAEV,IAAMhM,EAAW2C,cACXH,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cAE9CwF,qBAAU,WACRhI,EAASD,OACR,CAACC,IAEJ,IAAIiM,EAAS,GA6Cb,OA3CEA,EADEzJ,EAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0J,KAAK,OAAOC,OAAK,EAACC,UAAWpD,KACpC,cAAC,IAAD,CAAOkD,KAAK,SAASC,OAAK,EAACC,UAAWX,KACtC,cAAC,IAAD,CAAOS,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAUlJ,GAAG,SAKf,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+I,KAAK,SAASC,OAAK,EAACC,UAAWE,IACtC,cAAC,IAAD,CAAOJ,KAAK,UAAUC,OAAK,EAACC,UAAWG,KACvC,cAAC,IAAD,CAAOL,KAAK,OAAOC,OAAK,EAACK,OAAQ,SAAApL,GAAK,OACpCoB,EACE,cAAC,GAAD,IAEA,cAAC,IAAD,CAAUW,GAAI,CAAEsJ,SAAU,SAAU/J,MAAO,CAAEgK,KAAMtL,EAAMwC,gBAG7D,cAAC,IAAD,CAAOsI,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,SAASC,OAAK,EAACC,UAAWX,KACtC,cAAC,IAAD,CAAUtI,GAAG,SAsBjB,qBAAKK,UAAU,MAAf,SACE,cAAC,EAAD,UACGyI,OCzDMU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtM,MAAK,YAAkD,IAA/CuM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCLRjN,GAAW,SAACwN,GACd,OAAOA,EAAOxN,UAqBHyN,GAfW,WAA4B,IAA3B1K,EAA0B,wDAAXyK,EAAW,uCACjD,OAAQA,EAAOvN,MACX,IAAK,SAGG,OADAgB,QAAQC,IAAI,iBACLlB,GAASwN,GAExB,QACI,OAAOzK,I,SChBb5C,GAAW,SAACqN,GACd,OAAOA,EAAOrN,UAcHuN,GAZS,WAAyB,IAAxB3K,EAAuB,uDAAf,GAAIyK,EAAW,uCAC5C,OAAQA,EAAOvN,MACX,IAAK,gBAEG,OAAOE,GAASqN,GAExB,QACI,OAAOzK,ICCb4K,GAAmB3J,OAAO4J,sCAAwCC,KAWlEC,GAAcC,aAAgB,CAClClL,WAAY4K,GACZtN,SAAUuN,KAGNM,GAAQC,aAAYH,GAAaH,GAAiBO,aAAgBC,QACxEC,IAASvB,OACP,cAAC,IAAD,CAAUmB,MAAOA,GAAjB,SACI,cAAC,IAAD,UACE,cAAC,GAAD,QAGNK,SAASC,eAAe,SAM1BtB,M,mBCxCAuB,EAAOC,QAAU,CAAC,WAAa,+BAA+B,YAAc,gCAAgC,eAAiB,qC,mBCA7HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,WAAa,4B,mBCA7FD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,IAAM,0B,mBCApGD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,SAAW,0B,mBCAxED,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,aAAe,8B,mBCAjCD,EAAOC,QAAU,CAAC,eAAiB,kC,mBCAnCD,EAAOC,QAAU,CAAC,cAAgB,gC","file":"static/js/main.d878db11.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const userlogin = (loggedIn) => {\r\n    return {\r\n        type: 'LOG_IN',\r\n        loggedIn: loggedIn\r\n    }\r\n}\r\n\r\n\r\nexport const getUserData = (userdata) => {\r\n    return {\r\n        type: 'GET_USER_DATA',\r\n        userdata: userdata,\r\n    }\r\n}\r\n\r\nexport const authCheckLoggedIn = () => {\r\n\r\n    return dispatch => {\r\n\r\n        let url = 'http://localhost:8080/user';\r\n        const loggedInCheck =async ()=>{\r\n            axios({\r\n                method: 'get',\r\n                url: url,\r\n                responseType: 'stream',\r\n                withCredentials: true\r\n            }).then((res) => {\r\n                if (res.data.authenticated !== undefined && res.data.authenticated === true) {\r\n                    console.log(\"Hello\")\r\n                    dispatch(getUserData(res.data))\r\n                    dispatch(userlogin(true))\r\n                } else {\r\n                    console.log(\"Hello1314234\")\r\n                    dispatch(getUserData(res.data))\r\n                    dispatch(userlogin( false))\r\n                }\r\n                console.log(res);\r\n            }).catch((err) => {\r\n                console.log(\"Here\")\r\n                console.error(err);\r\n                dispatch(getUserData({authenticated: false}))\r\n                dispatch(userlogin(false))\r\n            })\r\n        }\r\n        loggedInCheck()\r\n        // const token = localStorage.getItem('token');\r\n        // if (!token) {\r\n        //     dispatch(logout());\r\n        // } else {\r\n        //     const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n\r\n        //     if (expirationDate <= new Date()) {\r\n        //         dispatch(logout());\r\n        //     } else {\r\n        //         const userId = localStorage.getItem('userId');\r\n        //         dispatch(authSuccess(token, userId));\r\n        //         dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n        //         //getSeconds was not working\r\n        //         //used getTime to get milli seconds and divide by 1000\r\n\r\n        //     }\r\n        // };\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n    return class extends Component {\r\n\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            //before request is sent\r\n            this.reqInterceptors = axios.interceptors.request.use(req => {\r\n                return req;\r\n            });\r\n            //before response is displayed\r\n            this.resInterceptors = axios.interceptors.response.use(response => {\r\n                return response;\r\n            }, error => {\r\n               if(error.response.status===400){\r\n                    toast.error('Invalid Login!!!', {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                }\r\n                return \"error\";\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            // console.log('will unmount', this.reqInterceptors, this.resInterceptors)\r\n            axios.interceptors.request.eject(this.reqInterceptors);\r\n            axios.interceptors.request.eject(this.resInterceptors);\r\n        }\r\n        render() {\r\n            return (\r\n                <WrappedComponent {...this.props} />\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withErrorHandler;","import axios from 'axios';\r\nimport React from 'react'\r\nimport { Navbar, Container, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { authCheckLoggedIn } from '../../store/actions/action';\r\nimport withErrorHandler from '../ErrorHandler/withErrorHandler';\r\n\r\nconst NavBar = () => {\r\n\r\n    const isLoggedIn = useSelector(state => state.isLoggedIn);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = (e)=>{\r\n        let url = 'http://localhost:8080/logout';\r\n        const  logoutUser = async()=>{\r\n            axios({\r\n                method: 'get',\r\n                url: url,\r\n                responseType: 'stream',\r\n                withCredentials: true\r\n              }).then((res)=>{\r\n                  dispatch(authCheckLoggedIn())\r\n                  window.location.reload();\r\n                  console.log(res);\r\n              }).catch((err)=>{\r\n                  console.log(\"Here\")\r\n                  console.error(err);\r\n              })\r\n        }\r\n        logoutUser();\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand to=\"#home\">RECIPIIS</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                            <Link className=\"nav-link\" to=\"/add\">Submit a Recipe</Link>\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item to=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item to=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item to=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item to=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown> */}\r\n                        </Nav>\r\n                        <Nav>\r\n\r\n                            {isLoggedIn\r\n                                ? <Link className=\"nav-link\" to=\"#\" onClick={(e)=>logout(e)}>Logout</Link>\r\n                                : <>\r\n                                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                                    <Link className=\"nav-link\" to=\"/signup\">\r\n                                        Sign Up\r\n                                    </Link>\r\n                                </>\r\n                            }\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default withErrorHandler(NavBar, axios);","import React from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport classes from './Layout.module.css';\r\nexport const Layout = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <main className={classes.Content}>\r\n                {props.children}\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n            </main>\r\n        </ >\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { authCheckLoggedIn } from '../../store/actions/action';\r\nimport classes from './Login.module.css'\r\nimport withErrorHandler from '../../components/ErrorHandler/withErrorHandler';\r\nimport { toast } from 'react-toastify';\r\nconst Login = (props) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: ''\r\n        // rememberMe: false\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const loginUser = (e) => {\r\n        e.preventDefault();\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('username', formData.username);\r\n        bodyFormData.append('password', formData.password);\r\n        // bodyFormData.append('remember-me', formData.rememberMe);\r\n\r\n        var url = 'http://localhost:8080/login';\r\n\r\n        const login = async () => {\r\n            console.log(\"Here\")\r\n            axios({\r\n                method: \"post\",\r\n                url: url,\r\n                data: bodyFormData,\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n                withCredentials: true\r\n            })\r\n                .then(function (response) {\r\n                    console.log(\"success\")\r\n                    console.log(response);\r\n                    if (response !== 'error') {\r\n                        toast.success('Login Successful', {\r\n                            position: \"top-center\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                        });\r\n                    }\r\n                    dispatch(authCheckLoggedIn());\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(\"error\")\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.headers);\r\n                    }\r\n                });\r\n            // const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n            // const data = await response.json();\r\n            // setRecipes(data)\r\n        }\r\n        login();\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        setFormData(prevState => {\r\n            return { ...prevState, [name]: value }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={`container ${classes.LoginSection}`}>\r\n            <form className=\"form-signin\">\r\n                <h2 className=\"form-signin-heading\">Please login to RECIPIIS</h2>\r\n                <p>\r\n                    <label htmlFor=\"username\" className=\"sr-only\">Username</label>\r\n                    <input onChange={(e) => handleInputChange(e)} value={formData.username} type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" placeholder=\"Username\" required=\"\"\r\n                        autoFocus=\"\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n                    <input onChange={(e) => handleInputChange(e)} value={formData.password} type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\"\r\n                        required=\"\" />\r\n                </p>\r\n                {/* <p>\r\n                    Remember me?\r\n                    <input onChange={(e) => handleInputChange(e)} value={formData.rememberMe} type=\"checkbox\" id=\"remember-me\" name=\"rememberMe\" />\r\n                </p> */}\r\n                <button className=\"btn btn-lg btn-primary btn-block\" onClick={(e) => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withErrorHandler(Login, axios);","import axios from 'axios';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport withErrorHandler from '../ErrorHandler/withErrorHandler';\r\nimport classes from './RecipeCard.module.css';\r\n\r\nconst RecipeCard = (props) => {\r\n\r\n    let links = ''\r\n\r\n\r\n    const approveRecipe = (e, recipeId) => {\r\n        e.preventDefault();\r\n        var url = `http://localhost:8080/recipe/approve/${recipeId}`;\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: url,\r\n            withCredentials: true\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"success\")\r\n                console.log(response);\r\n                window.location.reload();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"error\")\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const disapproveRecipe = (e, recipeId) => {\r\n        e.preventDefault();\r\n        var url = `http://localhost:8080/recipe/disapprove/${recipeId}`;\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: url,\r\n            withCredentials: true\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"success\")\r\n                console.log(response);\r\n                window.location.reload();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"error\")\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    if (props.isLoggedIn && props.userdata.authenticated) {\r\n        if (props.userdata.authorities.some(x => x.authority === \"ROLE_ADMIN\")) {\r\n            if (props.approved === false) {\r\n                links = (<button className={classes.approvelink} onClick={(e) => approveRecipe(e, props.id)}>Approve</button>)\r\n            } else {\r\n                links = (<button className={classes.disapprovelink} onClick={(e) => disapproveRecipe(e, props.id)}>Disapprove</button>)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.RecipeCard}>\r\n            <Card style={{ width: '100%' }}>\r\n                <Card.Body>\r\n                    <Card.Title>{props.recipeName}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{props.recipeCategory}</Card.Subtitle>\r\n                    <ul>\r\n                        {props.ingredients.map((ingredient, indx) => {\r\n                            return (\r\n                                <li key={indx}>{ingredient.ingredientName}</li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <Card.Text>\r\n                        {props.recipeProcedure}\r\n                    </Card.Text>\r\n                    {\r\n                        links\r\n                    }\r\n                    {/* <Card.Link href=\"#\">Card Link</Card.Link> */}\r\n                    {/* <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withErrorHandler(RecipeCard, axios);","import React from 'react'\r\n\r\nimport classes from './Title.module.css'\r\n\r\nexport const Title = (props) => {\r\n    return (\r\n        <h1 className={[classes.Title, classes.divider, classes.donotcross].join(' ')}>{props.name}</h1>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport classes from './Recipes.module.css'\r\nimport axios from 'axios';\r\nimport RecipeCard  from '../../components/RecipeCard/RecipeCard';\r\nimport { Title } from '../../components/Title/Title';\r\nimport { useSelector } from 'react-redux';\r\nimport withErrorHandler from '../../components/ErrorHandler/withErrorHandler';\r\n\r\nconst Recipes = () => {\r\n\r\n    const [recipes, setRecipes] = useState([]);\r\n    const isLoggedIn = useSelector(state => state.isLoggedIn)\r\n    const userdata = useSelector(state => state.userdata)\r\n    useEffect(() => {\r\n        let url = \"http://localhost:8080/recipe/all\"\r\n        const fetchRecipes = async () => {\r\n            axios({\r\n                method: 'get',\r\n                url: url,\r\n                withCredentials: true\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n                setRecipes(res.data)\r\n            }).catch((err) => {\r\n                console.error(err);\r\n            })\r\n            // const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n        }\r\n        fetchRecipes();\r\n\r\n    }, [])\r\n\r\n    let allRecipes = \"No recipes found in the database\"\r\n\r\n    if (recipes.length !== 0) {\r\n        allRecipes = recipes.map((recipe, idx) => {\r\n            return (\r\n                <RecipeCard key={idx} {...recipe} isLoggedIn={isLoggedIn} userdata={userdata} />\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={classes.RecipesSection}>\r\n                <Title name=\"All Recipes\" />\r\n                {allRecipes}\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withErrorHandler(Recipes, axios);","import axios from 'axios';\r\nimport React, {useRef, useState } from 'react';\r\nimport { Button, Col, FloatingLabel, Form, FormControl, InputGroup, OverlayTrigger, Row, Tooltip } from 'react-bootstrap';\r\n// import { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport withErrorHandler from '../../components/ErrorHandler/withErrorHandler';\r\nimport classes from './RecipeForm.module.css'\r\n\r\nconst RecipeForm = (props) => {\r\n\r\n    const [ingredientInputValue, setIngredientInputValue] = useState('');\r\n\r\n    const [bodyFormData, setBodyFormData] = useState({\r\n        recipeName: '',\r\n        recipeCategory: 'VEG',\r\n        recipeProcedure: '',\r\n        ingredients: [{\r\n            ingredientName: ''\r\n        }]\r\n    });\r\n\r\n    const inputRef = useRef();\r\n    // const isLoggedIn = useSelector(state => state.isLoggedIn);\r\n    const history = useHistory();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            Click to delete from list\r\n        </Tooltip>\r\n    );\r\n\r\n    const addIngredient = (e) => {\r\n        e.preventDefault();\r\n        setBodyFormData(prevState => {\r\n            const prevIngredients = [...prevState.ingredients]\r\n            if (prevIngredients.some(ing => ing.ingredientName === ingredientInputValue) || ingredientInputValue === '') {\r\n                console.log(\"Exists\")\r\n                return { ...prevState };\r\n            } else {\r\n                if (prevIngredients.length > 0 && prevIngredients[0].ingredientName === '') {\r\n                    prevIngredients.shift(); //remove first empty initial ingredient\r\n                }\r\n                return { ...prevState, ingredients: [...prevIngredients, { ingredientName: ingredientInputValue }] };\r\n            }\r\n        });\r\n        setIngredientInputValue('')\r\n        inputRef.current.focus();\r\n    }\r\n\r\n\r\n    const handleIngredientInputChange = (e) => {\r\n        e.preventDefault();\r\n        setIngredientInputValue(e.target.value)\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        setBodyFormData(prevState => ({ ...prevState, [name]: value }));\r\n    }\r\n\r\n    const submitRecipe = (e) => {\r\n        e.preventDefault();\r\n        var url = 'http://localhost:8080/recipe/add';\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: url,\r\n            data: bodyFormData,\r\n            // headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            withCredentials: true\r\n        })\r\n            .then(function (response) {\r\n                console.log(response.headers);\r\n                console.log(\"success\")\r\n                console.log(response);\r\n                history.push(\"/\")\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"error\")\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    const deleteTag = (ing, idx) => {\r\n        const allIng = [...bodyFormData.ingredients]\r\n        const toRemove = allIng.indexOf(ing);\r\n        allIng.splice(toRemove, 1);\r\n        setBodyFormData(prevState => ({ ...prevState, ingredients: [...allIng] }));\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <div className={`container ${classes.RecipeForm}`}>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Recipe Name</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>#</InputGroup.Text>\r\n                        <FormControl name=\"recipeName\" onChange={(e) => handleInputChange(e)} value={bodyFormData.recipeName} id=\"inlineFormInputGroupRecipeName\" placeholder=\"Enter Recipe Name \" />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label\r\n                        className=\"me-sm-2\"\r\n                        htmlFor=\"inlineFormCustomSelect\"\r\n                    >\r\n                        Select Category\r\n                    </Form.Label>\r\n                    <Form.Select name = \"recipeCategory\" onChange={(e) => handleInputChange(e)} value={bodyFormData.recipeCategory} className=\"me-sm-2\" id=\"inlineFormCustomSelect\">\r\n                        <option value=\"VEG\">VEG</option>\r\n                        <option value=\"NON-VEG\">NON-VEG</option>\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Row className=\"g-2\">\r\n                        <Col lg>\r\n                            <FormControl ref={inputRef} onChange={(e) => handleIngredientInputChange(e)} value={ingredientInputValue} id=\"inlineFormInputGroupIngredinets\" placeholder=\"Enter ingredients\" />\r\n                        </Col>\r\n                        <Col sm>\r\n                            <Button variant=\"success\" onClick={(e) => addIngredient(e)}>Add</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className={classes.tags}>\r\n                        {bodyFormData.ingredients.map((ing, idx) => {\r\n                            if (ing.ingredientName !== '')\r\n                                return (\r\n                                    <span className={classes.tag} key={idx} onClick={() => deleteTag(ing, idx)} style={{ \"--color\": \"#41b883\" }}>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 0, hide: 0 }}\r\n                                            overlay={renderTooltip}><span>{ing.ingredientName}</span></OverlayTrigger>\r\n                                    </span>\r\n                                )\r\n                            else\r\n                                return null;\r\n                        })}\r\n                    </div>\r\n\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <FloatingLabel controlId=\"floatingTextarea2\" label=\"Procedure\">\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            placeholder=\"Enter recipe procedure\"\r\n                            style={{ height: '200px' }}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                            name = \"recipeProcedure\" \r\n                            value={bodyFormData.recipeProcedure}\r\n                        />\r\n                    </FloatingLabel>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" onClick={(e) => submitRecipe(e)}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default withErrorHandler(RecipeForm, axios);","import React from 'react'\r\nimport { Title } from '../../components/Title/Title'\r\nimport classes from './About.module.css'\r\nexport const About = () => {\r\n    return (\r\n        <section className={`container ${classes.AboutSection}`}>\r\n            <Title name=\"About\"/>\r\n            <div className={classes.AboutDiv}>\r\n                <p>\r\n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\r\n                    Why do we use it?\r\n                    It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n                </p>\r\n            </div>\r\n\r\n            <div className={classes.AboutDiv}>\r\n                <p>\r\n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\r\n                    Why do we use it?\r\n                    It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n                </p>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { authCheckLoggedIn } from '../../store/actions/action';\r\nimport classes from './SignUp.module.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport withErrorHandler from '../../components/ErrorHandler/withErrorHandler';\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n        email: ''\r\n        // rememberMe: false\r\n    });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const signupUser = (e) => {\r\n        e.preventDefault();\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('username', formData.username);\r\n        bodyFormData.append('password', formData.password);\r\n        bodyFormData.append('email', formData.email);\r\n\r\n        // bodyFormData.append('remember-me', formData.rememberMe);\r\n\r\n        var url = 'http://localhost:8080/signup';\r\n\r\n        const signup = async () => {\r\n            console.log(\"Sign Up\")\r\n            axios({\r\n                method: \"post\",\r\n                url: url,\r\n                data: formData,\r\n                withCredentials: true\r\n            })\r\n                .then(function (response) {\r\n                    console.log(\"success\")\r\n                    console.log(response);\r\n                    toast.success('Login with the newly created account!!', {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                    history.push(\"/login\")\r\n                    dispatch(authCheckLoggedIn());\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(\"error\")\r\n                    toast(\"Error encountered!!!\");\r\n                    console.log(error);\r\n                });\r\n            // const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n            // const data = await response.json();\r\n            // setRecipes(data)\r\n        }\r\n        signup();\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        setFormData(prevState => {\r\n            return { ...prevState, [name]: value }\r\n        });\r\n    }\r\n\r\n    const notify = () => toast(\"Wow so easy !\");\r\n\r\n\r\n    return (\r\n        <div className={`container ${classes.SignupSection}`}>\r\n            <form className=\"form-signin\">\r\n                <h2 className=\"form-signin-heading\">Sign up for RECIPIIS</h2>\r\n                <p>\r\n                    <label htmlFor=\"email\" className=\"sr-only\">Email</label>\r\n                    <input onChange={(e) => handleInputChange(e)} value={formData.email} type=\"text\" id=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email\" required=\"\"\r\n                        autoFocus=\"\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"username\" className=\"sr-only\">Username</label>\r\n                    <input onChange={(e) => handleInputChange(e)} value={formData.username} type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" placeholder=\"Username\" required=\"\"\r\n                        autoFocus=\"\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n                    <input onChange={(e) => handleInputChange(e)} value={formData.password} type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\"\r\n                        required=\"\" />\r\n                </p>\r\n                {/* <p>\r\n                    Remember me?\r\n                    <input onChange={(e) => handleInputChange(e)} value={formData.rememberMe} type=\"checkbox\" id=\"remember-me\" name=\"rememberMe\" />\r\n                </p> */}\r\n                <button className=\"btn btn-lg btn-primary btn-block\" onClick={(e) => signupUser(e)}>Sign Up</button>\r\n\r\n            </form>\r\n\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default withErrorHandler(SignUp, axios);","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect } from \"react\";\nimport { Layout } from \"./components/Layout/Layout\";\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './pages/Login/Login';\nimport Recipes from './pages/Recipes/Recipes';\nimport RecipeForm from './pages/RecipeForm/RecipeForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authCheckLoggedIn } from './store/actions/action';\nimport { About } from './pages/About/About';\nimport SignUp from './pages/SignUp/SignUp';\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n\n  useEffect(() => {\n    dispatch(authCheckLoggedIn())\n  }, [dispatch]);\n\n  let routes = '';\n  if (isLoggedIn) {\n    routes = (\n      <Switch>\n        <Route path='/add' exact component={RecipeForm} />\n        <Route path='/about' exact component={About} />\n        <Route path='/' exact component={Recipes} />\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/login' exact component={Login} />\n        <Route path='/signup' exact component={SignUp} />\n        <Route path='/add' exact render={props =>\n          isLoggedIn ? (\n            <RecipeForm />\n          ) : (\n            <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n          )\n        } />\n        <Route path='/' exact component={Recipes} />\n        <Route path='/about' exact component={About} />\n        <Redirect to='/' />\n      </Switch>\n    );\n  }\n\n\n  // if (this.props.isAuthenticated) {\n  //   routes = (\n  //     <Switch>\n  //       {/* No /auth route \n  //         does not go to checkout page ise user not signed in clicked sign up to order\n  //         No /auth route no redirection to checkout as that code never gets executed \n  //       */}\n  //       <Route path='/checkout' component={Checkout} />\n  //       <Route path='/orders' exact component={Orders} />\n  //       <Route path='/logout' exact component={Logout} />\n  //       <Route path='/auth' exact component={Auth} />\n  //       <Route path='/' exact component={BurgerBuilder} />\n  //       <Redirect to='/' />\n  //     </Switch>);\n  // }\n  return (\n    <div className=\"App\">\n      <Layout>\n        {routes}\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nconst loggedIn = (action) => {\r\n    return action.loggedIn;\r\n}\r\n\r\n\r\n\r\n\r\nconst isLoggedInReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'LOG_IN':\r\n            {\r\n                console.log(\"sdfsdfsdfsdfs\")\r\n                return loggedIn(action)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default isLoggedInReducer;","\r\nconst userdata = (action) => {\r\n    return action.userdata;\r\n}\r\nconst userDataReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_DATA':\r\n            {\r\n                return userdata(action);\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userDataReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport isLoggedInReducer from './store/reducers/isLoggedIn';\nimport thunk from 'redux-thunk';\nimport userDataReducer from './store/reducers/userDataReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n//STORE -> GLOBALIZED STATE\n\n//ACTION INCREMENT\n\n//REDUCER\n\n//DISPATCH\n\nconst rootReducer = combineReducers({\n  isLoggedIn: isLoggedInReducer,\n  userdata: userDataReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeCard\":\"RecipeCard_RecipeCard__bbquP\",\"approvelink\":\"RecipeCard_approvelink__mVoXW\",\"disapprovelink\":\"RecipeCard_disapprovelink__2tEb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3DIwr\",\"divider\":\"Title_divider__LURQe\",\"donotcross\":\"Title_donotcross__tGYpz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeForm\":\"RecipeForm_RecipeForm__2t4fg\",\"tags\":\"RecipeForm_tags__9m0zU\",\"tag\":\"RecipeForm_tag__ppYI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutSection\":\"About_AboutSection__3hvLI\",\"AboutDiv\":\"About_AboutDiv__8Q7c_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2VB0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginSection\":\"Login_LoginSection__1mK5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipesSection\":\"Recipes_RecipesSection__1MV39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignupSection\":\"SignUp_SignupSection__3bm-A\"};"],"sourceRoot":""}